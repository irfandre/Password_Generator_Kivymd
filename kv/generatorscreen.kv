
#:import Clipboard kivy.core.clipboard.Clipboard
#:import STANDARD_INCREMENT kivymd.material_resources.STANDARD_INCREMENT
#:import get_hex_from_color kivy.utils.get_hex_from_color
#:import get_color_from_hex kivy.utils.get_color_from_hex
<MyLabel@MDLabel>
    color: app.label

<GeneratorScreen>:
    MDBoxLayout:
        orientation: 'vertical'
        MDToolbar:
            title: '[color=#ffffff]Generator[/color]'
            right_action_items: [["dots-vertical", lambda x: app.open_settings() ]]

        MDFloatLayout:
            orientation: 'vertical'
            id: float_layout
            MyLabel:
                id: result
                pos_hint: {"center_x":0.5, "center_y":0.89}
#                size_hint: 0.65, None     # <<<<<<<<<<
#                height: self.texture_size[1]   # <<<<<<<<<<
#                size: root.width - dp(50), dp(1)
#                scroll_y: True
#                do_scroll_y: True
                text_size: root.width, None
                text: " "
                markup: True
                halign: "center"
                adaptive_size: True
#                font_style: "H6"
                padding: dp(20),1
                allow_copy: True
                y: dp(200)

            MyLabel:
                pos_hint: {"center_x": 0.12, "center_y": 0.7}
                size_hint: (.8, None)
                text: str(int(input_value.value))
                halign: "center"
#                font_style: "H7"
                theme_text_color: "Primary"
                adaptive_height: True
                id: one

            MDSlider:
                min: 0
                max: 128
                value: 8
                id: input_value
#                value_track_color: [1,0.2,1,1]
                pos_hint: {"center_x": 0.6, "center_y": 0.7}
                size_hint: .73, None
                hint: False
                color: app.theme_cls.primary_color
                on_value: root.value_check()


            MyLabel:
                text: "Digits"
                pos_hint: {"center_x": 0.58, "center_y":0.6}
                theme_text_color: "Primary"

            MDSwitch:
                name: 'digits_switch'
                id: digits_switch
                pos_hint: {"center_x": 0.87, "center_y":0.6}
                on_active:
                    app.set_digits_config()
                    root.generate()
            MyLabel:
                text: "Special"
                pos_hint: {"center_x": 0.58, "center_y":0.5}
                theme_text_color: "Primary"

            MDSwitch:
                name: 'special_switch'
                id: special_switch
                pos_hint: {"center_x": 0.87, "center_y":0.5}
                on_active:
                    app.set_special_config()
                    root.generate()

            MyLabel:
                text: "Uppercase"
                pos_hint: {"center_x": 0.58, "center_y":0.4}
                theme_text_color: "Primary"

            MDSwitch:
                name: "upper_switch"
                id: upper_switch
                pos_hint: {"center_x": 0.87, "center_y":0.4}
                on_active:
                    app.set_special_config()
                    root.generate()
#            MDLabel:
#                text: result.text
            MDFillRoundFlatButton:
                id: regen_button
                text: "[color=#ffffff]Regenerate Password[/color]"
                pos_hint: {"center_x": 0.5, "center_y":0.18}
#                size_hint: .7,None
#                text_color: 0, 0, 1, 1
#                md_bg_color: get_color_from_hex('F49C8A')
#                bg_hint_color: 1,1,0,1
                on_press: root.generate()
                adaptive_size: True


            MDFillRoundFlatButton:
                id: copy_button
                text: "[color=#ffffff]Copy Password[/color]"
                pos_hint: {"center_x": 0.5, "center_y":0.1}
#                size_hint: .7,None
                on_release: root.cleaned_text()
                adaptive_size: True

            MyLabel





